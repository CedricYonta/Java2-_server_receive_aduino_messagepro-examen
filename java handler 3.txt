import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Properties;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class DatabaseServlet extends HttpServlet {

  private static final long serialVersionUID = 1L;

  @Override
  protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    // Paramètres de connexion à la base de données
    String url = "jdbc:postgresql://localhost:5432/mydatabase";
    Properties props = new Properties();
    props.setProperty("user", "myuser");
    props.setProperty("password", "mypassword");

    // Génération de la page HTML de base
    response.setContentType("text/html");
    PrintWriter out = response.getWriter();
    out.println("<html><head><title>My Web App</title>");
    out.println("<script src='https://code.jquery.com/jquery-3.6.0.min.js'></script>");
    out.println("<script>");
    out.println("function updateData() {");
    out.println("$.get('data', function(data) {");
    out.println("$('#mytable').html(data);");
    out.println("});");
    out.println("setTimeout(updateData, 1000);");
    out.println("}");
    out.println("$(document).ready(function() {");
    out.println("updateData();");
    out.println("});");
    out.println("</script>");
    out.println("</head><body>");
    out.println("<h1>My Data</h1>");
    out.println("<table id='mytable'>");
    out.println("</table>");
    out.println("</body></html>");
  }

  @Override
  protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    // Paramètres de connexion à la base de données
    String url = "jdbc:postgresql://localhost:5432/mydatabase";
    Properties props = new Properties();
    props.setProperty("user", "myuser");
    props.setProperty("password", "mypassword");

    try (Connection conn = DriverManager.getConnection(url, props)) {
      // Exécution de la requête SQL pour récupérer le dernier enregistrement
      Statement stmt = conn.createStatement();
      ResultSet rs = stmt.executeQuery("SELECT * FROM mytable ORDER BY id DESC LIMIT 1");

      // Génération du contenu HTML pour la table
      StringBuilder sb = new StringBuilder();
      while (rs.next()) {
        sb.append("<tr><td>").append(rs.getString("column1")).append("</td><td>").append(rs.getString("column2")).append("</td></tr>");
      }

      // Envoi du contenu HTML en réponse à la requête AJAX
      response.setContentType("text/plain");
      PrintWriter out = response.getWriter();
      out.println(sb.toString());
    } catch (Exception e) {
      throw new ServletException("Error processing database request", e);
    }
  }

}


Dans cette version modifiée du code, nous avons ajouté du code JavaScript pour effectuer une requête AJAX à l'URL /datatoutes les secondes et mettre à jour la table sur la page web. Nous avons également supprimé la boucle whilede la méthode doGet()et avons créé une méthode doPost()pour gérer la requête